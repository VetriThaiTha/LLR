@page "/"
@using Lrr.Models;
@inject Lrr.Shared.LrrState LrrState


<PageTitle>Index Test page</PageTitle>

<h3>Test page</h3>

<EditForm Model="@_model" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <table class="reportTable">

        <tr>
            <td>
                <InputNumber style="width:6ch" id="HighestBidValue" @bind-Value="_model.TemperatureC"  />%
        <ValidationMessage For="@(()=>_model.TemperatureC)"></ValidationMessage>
            </td>
        </tr>
        <tr>
            <td>
                ₹<InputNumber style="width:13ch" id="PurchaseValue" @bind-Value="_model.PurchaseValue"   />
       <ValidationMessage For="@(()=>_model.PurchaseValue)"></ValidationMessage>
            </td>
        </tr>
    </table>

    <button type="submit" class="btn btn-primary" @onclick="Refresh">Update Values</button>

    <button type="reset" class="btn btn-primary">Reset</button>
        


</EditForm>
<h3>Test page</h3>
@code{
    private RegistrationInputModel _model = new ();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _model.updateState(LrrState, Refresh);
    }

    private void Refresh()
    {
        InvokeAsync(() =>
                {

                    StateHasChanged();
                });
    }

        private void HandleValidSubmit()
    {
        InvokeAsync(() =>
                {

                    StateHasChanged();
                });

    }

    
}