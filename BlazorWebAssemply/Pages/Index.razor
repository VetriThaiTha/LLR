@page "/"
@using Lrr.Models;
@using Microsoft.AspNetCore.WebUtilities;
@using Microsoft.Extensions.Primitives;
@inject Lrr.Shared.LrrState LrrState


<PageTitle>Land Registration Reform Simple Calculator</PageTitle>



<H3 style="color: rgba(0,0,0,0.6); text-shadow: 5px 5px 10px #5451f5; "> Proposal documents:</H3>
<ul>
    <li>
        <a href=@Constants.Url_Document_Principle target="_blank">Principle</a>
            <p>Document explain the principle behind the prposal.</p>
    </li>
    <li>
        <a href=@Constants.Url_Document_Plan target="_blank">Plan detail</a>
         <p>Explains the plan in detail</p>
    </li>
    <li>
        <a href="@Constants.Url_Document_Scenario" target="_blank">Scenarios</a>
        <p>Apply the plan for few scenarios and shows the impact</p>
    </li>
    <li>
        <a href="@Constants.Url_Document_References" target="_blank">References</a>
        <p>References</p>
    </li>
    
</ul>

<H3 style="color: rgba(0,0,0,0.6); text-shadow: 5px 5px 10px #5451f5; "> Calculators:</H3>
<ul>
    <li>
        <NavLink class="nav-link" href="simpleCalculator">Simple Calculator</NavLink>
        <p>Simple calculator used to calculate payment schedule based on user inputs.</p>
    </li>
    <li>
        <NavLink class="nav-link" href="simpleCalculatorStepValue">Simple Calculator with step auction value</NavLink>
        <p>Calculator which enforces bid increments.</p>
    </li>
    <li>
        <NavLink class="nav-link" href="calculatorBands">Calculator with Bands </NavLink>
        <p>Calculator which uses price bands for auction starting value.</p>
    </li>
    <li>
        <NavLink class="nav-link" href="calculatorCurve">Calculator with Curve </NavLink>
        <p>Calculator which uses a linear curve to calculate auction starting value.</p>
    </li>
</ul>

<H3 style="color: rgba(0,0,0,0.6); text-shadow: 5px 5px 10px #5451f5; "> Videos:</H3>
<ul>
    <li>
        <a href="@Constants.Url_Video_Main" target="_blank">Main video</a>
        <p>Video which explains the principle.</p>
    </li>
    <li>
        <a href="@Constants.Url_Video_Faq" target="_blank">Faq video</a>
        <p>Explains the impacts.</p>
    </li>
    <li>
        <a href="@Constants.Url_Video_Details" target="_blank">Technical details</a>
        <p>Explains the technical details.</p>
    </li>
    
</ul>



<img src=/iceberg.jpg height=200px width="200px"  />

<h6 >“If all of your dreams came true, would they just change you or would they change the world?” ― Cleo Wade</h6>

@code{
    [Inject]
    public NavigationManager navManager { get; set; }


    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        var key = "calcName";
        StringValues valueFromQueryString;
        var uri = navManager.ToAbsoluteUri(navManager.Uri);
        var foundQueryParameter = QueryHelpers.ParseQuery(uri.Query).TryGetValue(key,  out valueFromQueryString);

        if (foundQueryParameter)
        {
            var strPage =  Convert.ToString(valueFromQueryString);

            if (!string.IsNullOrWhiteSpace(strPage))
            {
                if(strPage.Contains("StepValue", StringComparison.InvariantCultureIgnoreCase))
                {
                    navManager.NavigateTo("/simpleCalculatorStepValue");
                }
                else if(strPage.Contains("Bands", StringComparison.InvariantCultureIgnoreCase))
                {
                    navManager.NavigateTo("/calculatorBands");
                }
                else if(strPage.Contains("Curve", StringComparison.InvariantCultureIgnoreCase))
                {
                    navManager.NavigateTo("/calculatorCurve");
                }
                else 
                {
                    navManager.NavigateTo("/simpleCalculator");
                }

            }
           
        }

        
    }

    

    private void DisplayEdiConfig()
    {
        LrrState.EditConfig = true;
        Refresh();
    }

    private void Refresh()
    {
        LrrState.CalculateValues();
        InvokeAsync(() =>
                {

                    StateHasChanged();
                });
    }
}
